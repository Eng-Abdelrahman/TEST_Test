@model _3aqarak.MVC.ViewModels.ShopAvailableViewModel
@{
    ViewBag.Title = "EditShopAvailable";
}

@section styles{
    <style>
        label {
            float: right;
            font-size: 16px;
            font-weight: bold;
            clear: both;
        }

        h4 {
            text-align: center;
            font-size: 20px;
            text-decoration: underline;
        }

        h5 {
            text-align: right;
            font-size: 16px;
            text-decoration: underline;
            font-weight: bold;
        }

        .form-check-inline {
            float: right;
        }

        .ui-menu-item-wrapper {
            font-size: 20px;
            text-align: right;
        }
    </style>
}

<div class="card">
    <div class="card-header">
        <div class="card-header text-right">
            <nav aria-label="breadcrumb" role="navigation" style="direction :rtl">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">الصفحة الرئيسية </a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","AvailableLands")">عروض بيع العملاء </a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("EditAvailableLand","AvailableLands",new { id=Model.FK_ShopAvailable_Clients_ClientId})">عروض بيع عميل </a></li>
                    <li class="breadcrumb-item active" aria-current="page">تعديل عرض بيع لعميل </li>
                </ol>
            </nav>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive ps">
                <div class="card">
                    <div class="card-body">
                        <form id="updateShopAvailable">
                            @Html.AntiForgeryToken()
                            <h6 class="reqAlignment ">الرجاء إدخال البيانت التي تحتوي علامة<abbr class="req">*</abbr> </h6>
                            <div class="form-group  ">
                                <label for="first" class="text-right"> موظف السيلز:<abbr class="req">*</abbr></label>
                                <input type="text" value="@Model.salesName" class="form-control" id="tele" placeholder="السيلز" name="FK_ShopAvailable_Users_SalesId" required>
                                @Html.ValidationMessageFor(m => m.FK_ShopAvailable_Users_SalesId, "", new { @class = "text-danger " })
                            </div>
                            <div class="form-group">
                                <div class="show-img ">
                                    <input type="button" class="btn btn-block" data-toggle="modal" data-target="#myModal" value=" تحميل صــور العــرض " />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label class="preLabel">السعر<abbr class="text-danger">*</abbr></label>
                                    <input type="number" class="form-control" id="price" placeholder="السعر" min="1" value="@Model.Price" required>
                                    @Html.ValidationMessageFor(p => p.Price, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    <label class="preLabel">المساحة<abbr class="text-danger">*</abbr></label>
                                    <input type="number" class="form-control" id="space" placeholder="المساحة" min="1" value="@Model.Space" required>
                                    @Html.ValidationMessageFor(p => p.Space, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    <label class="preLabel">العنوان<abbr class="text-danger">*</abbr></label>
                                    <input type="text" class="form-control" id="address" placeholder="العنوان" value="@Model.Address" required>
                                    @Html.ValidationMessageFor(p => p.Address, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    <label> عدد الحمامات<abbr class="req">*</abbr></label>
                                    <input id="Bath" type="number" min="0" class="form-control" placeholder="عدد الحمامات" value="@Model.BathRooms" name="Bath" style="border :1px solid #DDD" required>
                                    @*<span class="text-danger" id="minBathErr"></span>*@
                                    @Html.ValidationMessageFor(p => p.BathRooms, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="col">
                                    <label class="preLabel">المنطقة<abbr class="text-danger">*</abbr></label>
                                    @Html.DropDownListFor(m => m.FK_ShopAvailable_Regions_Id, Model.Regions, "إختر المنطقة", new { @class = "form-control", id = "Region-dropdown" })
                                    @Html.ValidationMessageFor(p => p.FK_ShopAvailable_Regions_Id, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    <label>الترخيص:<abbr class="req">*</abbr></label>
                                    @Html.DropDownListFor(m => m.Islicense, new SelectList(new[] { new { value = true, text = "مرخص" }, new { value = false, text = "غير مرخص" } }.ToList(), "value", "text"), "نوع الترخيص", new { @class = "form-control", id = "Islicense", required = "required" })
                                    @Html.ValidationMessageFor(m => m.Islicense, "", new { @class = "text-danger", id = "licenseError" })
                                </div>
                                <div class="col">
                                    <label>استخدام العقـــار:<abbr class="req">*</abbr></label>
                                    @Html.DropDownListFor(m => m.FK_ShopAvailable_Usage_Id, Model.Usages, "اختر نوع العقار", new { @class = "form-control", id = "residence", required = "required" })
                                    @Html.ValidationMessageFor(m => m.FK_ShopAvailable_Usage_Id, "", new { @class = "text-danger", id = "typeError" })
                                </div>
                                <div class="col">
                                    <label>الاقسام العقارية<abbr class="req">*</abbr></label>
                                    @Html.DropDownListFor(m => m.FK_ShopAvailable_Transactions_Id, Model.Transactions, "اختر نوع التعامل", new { @class = "form-control", id = "trans", required = "required" })
                                    @Html.ValidationMessageFor(m => m.FK_ShopAvailable_Transactions_Id, "", new { @class = "text-danger", id = "transError" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label>طــريقة الدفع:<abbr class="req">*</abbr></label>
                                    @Html.DropDownListFor(m => m.FK_ShopAvailable_PaymentMethod_Id, Model.Payments, "اختر طريقة الدفع", new { @class = "form-control", id = "payment", required = "required" })
                                    @Html.ValidationMessageFor(m => m.FK_ShopAvailable_PaymentMethod_Id, "", new { @class = "text-danger", id = "paymentError" })
                                </div>
                                <div class="col">
                                    <label>نوع المحل<abbr class="req">*</abbr></label>
                                    <select id="ScaleNamber" required class="form-control" name="ScaleNumber">
                                        <option value="" disabled>إختر نوع المحل</option>
                                        <option value="1" @(Model.ScaleNumber == 1 ? "selected" : "")>ميزانين</option>
                                        <option value="2" @(Model.ScaleNumber == 2 ? "selected" : "")>أرضي وميزانين</option>
                                        <option value="3" @(Model.ScaleNumber == 3 ? "selected" : "")>أرضي</option>
                                        <option value="4" @(Model.ScaleNumber == 4 ? "selected" : "")>الكل</option>
                                    </select>
                                    @Html.ValidationMessageFor(m => m.ScaleNumber, "", new { @class = "text-danger", id = "ScaleNamberError" })
                                </div>
                                <div class="col">
                                    <label>سنه البناء<abbr class="req">*</abbr></label>
                                    <input id="BuildYear" min="1900" max="@DateTime.Now.Year" type="number" class="form-control" value="@Model.DateOfBuild" name="DateOfBuild" placeholder="سنة البناء" required />
                                    @Html.ValidationMessageFor(d => d.DateOfBuild, "", new { @class = "text-danger" })
                                    <span class="text-danger" id="BuildYearErr"></span>
                                </div>
                                <div class="col">
                                    <label>تقسيم المحل:<abbr class="req">*</abbr></label>
                                    @Html.DropDownListFor(m => m.IsDivider, new SelectList(new[] { new { value = true, text = "مقسم" }, new { value = false, text = "غير مقسم" } }.ToList(), "value", "text"), "نوع المحل", new { @class = "form-control", id = "IsDivider", required = "required" })
                                    @Html.ValidationMessageFor(m => m.IsDivider, "", new { @class = "text-danger", id = "DividerError" })
                                </div>
                            </div>
                            <div class="row">
                                
                                <div class="col">
                                    <label>نوع التجهيز:<abbr class="req">*</abbr></label>
                                    @Html.DropDownListFor(m => m.IsFurnished, new SelectList(new[] { new { value = true, text = "مجهز" }, new { value = false, text = "غير مجهز" } }.ToList(), "value", "text"), "نوع التجهيز", new { @class = "form-control", id = "IsFurnisher", required = "required" })
                                    @Html.ValidationMessageFor(m => m.IsFurnished, "", new { @class = "text-danger", id = "FurnisherError" })
                                </div>
                                <div class="col">
                                    <label>الاطــلالة:</label>
                                    @Html.DropDownListFor(m => m.ViewsArr, Model.Views, "", new { @class = "form-control", id = "view", required = "required", multiple = "multiple" })
                                    @Html.ValidationMessageFor(m => m.ViewsArr, "", new { @class = "text-danger", id = "viewError" })
                                </div>
                                <div class="col">
                                    <label>الملاحظــات:</label>
                                    <textarea class="form-control" id="notes" rows="10" col="100" style="border :1px solid #DDD ; border-radius:5px">@Model.Notes</textarea>
                                    @Html.ValidationMessageFor(n => n.Notes, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        Dropzone.options.dropzoneJsForm = {

            maxFilesize: 3, // MB
            maxFiles: 9,
            addRemoveLinks: true,
            uploadMultiple: true,
            parallelUploads: 9,
            autoProcessQueue: false,
            init: function () {
                var submitButton = document.querySelector("#act-on-upload")
                dropzoneJsForm = this;
                submitButton.addEventListener("click", function () {
                    dropzoneJsForm.processQueue();
                })
            },
            successmultiple: function (file, response) {
                if (response.valid) {
                    alertify.set('notifier', "position", "top-right");
                    alertify.notify(response.message, "success", 3, function () {

                    });
                }
                else {
                    alertify.set('notifier', "position", "top-right");
                    alertify.notify(response.message, "error", 3, function () { });
                }
            },
        };

        function validateShopAvailableData() {
            if ($("#tele").val() === "" || $("#tele").val() === null) {
                $("#tele").next("span.text-danger").html("الرجاء إدخال اسم الموظف!");
                $("#accessError").next("span.text-danger").html("الرجاء إدخال اسم الموظف!");
                return false;
            }
            else {
                $("#tele").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#price").val() === "" || $("#price").val() === null) {
                $("#price").next("span.text-danger").html("لابد من إدخال السعر");
                $("#accessError").next("span.text-danger").html("لابد من إدخال السعر!");

                return false;
            }
            else {
                $("#price").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");

            }
            if ($("#space").val() === "" || $("#space").val() === null) {
                $("#space").next("span.text-danger").html("الرجاء إدخال المساحه!");
                $("#accessError").next("span.text-danger").html("الرجاء إدخال المساحه!");
                return false;
            }
            else {
                $("#space").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#address").val() === "" || $("#address").val() === null) {
                $("#address").next("span.text-danger").html("الرجاء إدخال العنوان!");
                $("#accessError").next("span.text-danger").html("الرجاء إدخال العنوان!");
                return false;
            }
            else {
                $("#address").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#TransActionType-dropdown").val() === "" || $("#TransActionType-dropdown").val() === null) {
                $("#TransActionType-dropdown").next("span.text-danger").html("الرجاء اختيار نوع التعامل!");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار نوع التعامل!");
                return false;
            }
            else {
                $("#TransActionType-dropdown").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#Region-dropdown").val() === "" || $("#Region-dropdown").val() === null) {
                $("#Region-dropdown").next("span.text-danger").html("الرجاء اختيار المنطقة!");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار المنطقة!");
                return false;
            }
            else {
                $("#Region-dropdown").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#Islicense").val() === "" || $("#Islicense").val() === null) {
                $("#Islicense").next("span.text-danger").html("الرجاء اختيار الترخيص!");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار التجهيز!");
                return false;
            }
            else {
                $("#Islicense").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#residence").val() === "" || $("#residence").val() === null) {
                $("#residence").next("span.text-danger").html("الرجاء اختيار الاستخدام!");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار الاستخدام!");
                return false;
            }
            else {
                $("#residence").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#trans").val() === "" || $("#trans").val() === null) {
                $("#trans").next("span.text-danger").html("الرجاء اختيار القسم !");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار القسم !");
                return false;
            }
            else {
                $("#trans").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#payment").val() === "" || $("#payment").val() === null) {
                $("#payment").next("span.text-danger").html("الرجاء اختيار طريقة الدفع !");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار طريقة الدفع !");
                return false;
            }
            else {
                $("#payment").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#ScaleNumber").val() === "" || $("#ScaleNumber").val() === null) {
                $("#ScaleNumber").next("span.text-danger").html("الرجاء اختيار نوع المحل !");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار نوع المحل  !");
                return false;
            }
            else {
                $("#ScaleNumber").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#BuildYear").val() === "" || $("#BuildYear").val() === null) {
                $("#BuildYear").next("span.text-danger").html("لابد من إدخال سنه البناء!");
                $("#accessError").next("span.text-danger").html("لابد من إدخال  سنه البناء!");

                return false;
            }
            else {
                $("#BuildYear").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");

            }
            if ($("#IsDivider").val() === "" || $("#IsDivider").val() === null) {
                $("#IsDivider").next("span.text-danger").html("الرجاء اختيار التقسيم  !");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار التقسيم   !");
                return false;
            }
            else {
                $("#IsDivider").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#Bath").val() === "" || $("#Bath").val() === null) {
                $("#Bath").next("span.text-danger").html("لابد من إدخال عدد الحمامات!");
                $("#accessError").next("span.text-danger").html("لابد من إدخال عدد الحمامات!");

                return false;
            }
            else {
                $("#Bath").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");

            }
            if ($("#IsFurnisher").val() === "" || $("#IsFurnisher").val() === null) {
                $("#IsFurnisher").next("span.text-danger").html("الرجاء اختيار نوع التجهيز  !");
                $("#accessError").next("span.text-danger").html("الرجاء اختيار نوع التجهيز   !");
                return false;
            }
            else {
                $("#IsFurnisher").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            if ($("#view").val() === "" || $("#view").val() === null) {
                $("#view").next("span.text-danger").html("لابد من إختبار الإطلالة!");
                $("#accessError").next("span.text-danger").html("لابد من إختبار الإطلالة!");
                return false;
            }
            else {
                $("#view").next("span.text-danger").html("");
                $("#accessError").next("span.text-danger").html("");
            }
            var accessArr = [];
            $.each($(".access"), function (index, value) {

                if ($(this).is(":checked")) {
                    accessArr.push($(this).attr("data-id"));
                };
            });
            if (accessArr.length < 1) {
                accesseriesError
                $("#accesseriesError").html("لابد من إختيار أي من الكماليات المتاحة !");
                $("#accessError").html("لابد من إختيار أي من الكماليات المتاحة !");

                return false;
            }
            else {
                $("#accesseriesError").html("");
                $("#accessError").html("");
            }
            return true;
        };

        var SalesId = "";

        function collectShopAvailabledData() {
            var accessArr = [];
            $.each($(".access"), function (index, value) {
                if ($(this).is(":checked")) {
                    accessArr.push($(this).attr("data-id"));
                };
            });
            var obj = {
                FK_ShopAvailable_Users_SalesId: SalesId,
                Price: $("#price").val(),
                Space: $("#space").val(),
                Address: $("#address").val(),
                FK_ShopAvailable_Regions_Id: $("#Region-dropdown").val(),
                Islicense: $("#Islicense").val(),
                FK_ShopAvailable_Categories_Id: "@_3aqarak.MVC.Helpers.Categories.Shops",
                FK_ShopAvailable_Usage_Id: $("#residence").val(),
                Notes: $("#notes").val(),
                FK_ShopAvailable_Transactions_Id: $("#trans").val(),
                FK_ShopAvailable_PaymentMethod_Id: $("#payment").val(),
                ScaleNumber: $("#ScaleNumber").val(),
                DateOfBuild: $("#BuildYear").val(),
                IsDivider: $("#IsDivider").val(),
                BathRooms: $("#Bath").val(),
                IsFurnished: $("#IsFurnisher").val(),
                FK_ShopAvialable_Views_Id: $("#view").val(),
                AccessoriesArr: accessArr,
                IsMarketResearch: $("#IsMarketSearch-chkBox").is(":checked"),
                IsNegotiable: $("#IsNegotiable-chkBox").is(":checked")
            };
            return obj;
        };
    </script>
    <script>
        var token = $('input[name="__RequestVerificationToken"]').val();
        $(document).ready(function () {

            $("#tele").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/dashboard/admin/EmpAutoComplete",
                        type: "POST",
                        dataType: "json",
                        data: { text: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                SalesId = item.PK_Users_Id;
                                return { label: item.FirstName + " " + item.LastName, value: item.FirstName + " " + item.LastName + "-" + item.PK_Users_Id };
                            }))
                        }
                    });
                },
                select: function (event, ui) {
                    SalesId = ui.item.value.split("-")[1];
                    ui.item.value = ui.item.value.split("-")[0];
                },
            });

            $("#updateShopAvailable").submit(function (e) {
                e.preventDefault();
                var Valid = true;
                Valid = validateShopAvailableData();
                if (!Valid) {
                    return false;
                }
                var UpdatedShopData = collectShopAvailabledData();
                $.ajax({
                    url: "/ShopAvailable/UpdateShopAvailable/",
                    type: "post",
                    dataType: "json",
                    data: {
                        __RequestVerificationToken: token,
                        shopAvailableViewModel: UpdatedShopData
                    },
                    success: function (response) {
                        if (response.valid) {
                            alertify.alert(response.message, function () {
                                location.href = "/ShopAvailable/ShopDemandsMatchesAfterUpdate/";
                            });
                        }
                        else {
                            alertify.alert(response.message, function () {
                            });
                        };

                    },
                    error: function (response) {
                        alertify.alert("حدث خطا ما عند تسجيل البيانات", function () {

                        })

                    }
                });
            });
        });

    </script>
}